#442. Find All Duplicates in an Array
###题目
给定数组a, 其中1 <= a[i] <= a.size()，其中有的元素出现一次，有的元素出现两次。找出所有出现两次的数字。要求时间复杂度O(N)，空间复杂度O(1)。
###思路
把数组看成一个map，数组元素值看成key，key-1位置的数组值看成value。如果数字x出现2次，那么第一次出现的时候，我们把x-1位置的数字改成了负数。所以第二次再出现的时候，我们就知道x出现了两次了。
```
class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int> res;
        for (int i = 0; i < nums.size(); i++) {
            int idx = abs(nums[i]) - 1;
            if (nums[idx] < 0) res.push_back(abs(nums[i]));
            else
                nums[idx] = 0 - nums[idx];
        }
        return res;
    }
};
```
