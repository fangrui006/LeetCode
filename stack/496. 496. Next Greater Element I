#496. Next Greater Element I
##题目

给定两个数组nums1和nums2。其中，nums1是nums2的子集。对于nums1中的每个数，其在nums2中都有一个对应位置，找出它在对应位置右边第一个比它大的数。

举例：
```
nums1:[4, 1, 2]
nums2:[1, 3, 4, 2]

return:[-1, 3, -1]
```

注意：

 - nums1和nums2中的元素无重复
 - nums1和nums2的长度都不超过1000

##思路
对于nums2，我们从右向左遍历：
1. 如果栈顶的数比当前的数小，弹出栈顶；循环此过程直到栈顶的数大于当前数或栈空。
2. 如果当前stack空，说明当前右边的所有数都比当前数小，那么当前数返回-1；否则返回栈顶（当前数右边第一个比当前数大的数）
3. stack中插入当前数。

```C++
class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& findNums, vector<int>& nums) {
        unordered_map<int, int> map;
        stack<int> s;
        vector<int> result(findNums.size());
        for (int i = (int)nums.size() - 1; i >= 0; i--) {
            while (!s.empty() && s.top() < nums[i]) s.pop();
            map[nums[i]] = s.empty() ? -1 : s.top();
            s.push(nums[i]);
        }
        for (int i = 0; i < findNums.size(); i++) {
            result[i] = map[findNums[i]];
        }
        return result;
    }
};
```

注意：
1. vecotor()需要分配初始大小。
